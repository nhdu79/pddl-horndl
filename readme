This folder contains supplementary material for an AAAI submission "Expressivity of Planning with Horn Description Logic Ontologies": 

    * an appendix with the proofs omitted from the main text 

    * a set of problem instances, 
    
    * a code of a compiler that uses Clipper as a reasoner to deal with ontologies. Clipper is available online on https://github.com/ghxiao/clipper

    * and a patch for Clipper assuring multiple query rewriting at a time. 

The benchmark collection consists of a total 271 instances from different sources, existing one and newly created. Each instance has two types of representation: an original problem formulated in a triple <domain.pddl, problem.pddl, ontology.owl> and a compiled pddl version formatted as a classical planning task <domain.pddl, problem.pddl> which can already be fed to a planner supporting PDDL 2.1, e.g., FD 20.06 (http://www.fast-downward.org/Releases/20.06). 

Since this work is a pioneer in marrying planning with expressive ontologies, three domains (queens, robotConj and drones) with 110 problem instances have been designed specifically to demonstrate uniqueness of the approach. 

Below there is an example how to run the compiler.

domain="cats"
prefix="benchmark/$domain"

# path to a (patched) clipper
clipper="patchedClipper/clipper/clipper-distribution/target/clipper/clipper.sh"

# path to compiler.py
compiler="horn_dl_pddl_compiler/compiler.py"
tseitin="horn_dl_pddl_compiler/tseitin.py"

for i in `seq 6 1 25` 

do
# input
owl=$prefix/original/TTL.owl
input_domain=$prefix/original/domain.pddl
input_problem=$prefix/original/catProblem$i.pddl

# where the result should be written to
result_domain="_temp_compiledDomain$i.pddl"
result_problem="_temp_compiledProblem$i.pddl"
tseitin_domain="$prefix/pddl/compiledDomain$i.pddl"
tseitin_problem="$prefix/pddl/compiledProblem$i.pddl"

# run compilation
python3 "$compiler" "$owl" "$input_domain" "$input_problem" -d "$result_domain" -p "$result_problem" --clipper "$clipper" --clipper-mqf --debug -v $@ 

# run tseitin transformation
python3 "$tseitin" "$result_domain" "$result_problem" -d "$tseitin_domain" -p "$tseitin_problem" -v $@ 

rm "$result_domain" "$result_problem"

done

Â© 2021. This work is licensed under a CC BY 4.0 license (see https://creativecommons.org/licenses/by/4.0/ ). 
