(define (domain robot)
	(:predicates
		(Columns ?x)
		(Rows ?x)
		(Column0 ?x)
		(Column1 ?x)
		(Column2 ?x)
		(RightOf0 ?x)
		(RightOf1 ?x)
		(RightOf2 ?x)
		(LeftOf1 ?x)
		(LeftOf2 ?x)
		(LeftOf3 ?x)
		(Row0 ?x)
		(Row1 ?x)
		(Row2 ?x)
		(AboveOf0 ?x)
		(AboveOf1 ?x)
		(AboveOf2 ?x)
		(BelowOf1 ?x)
		(BelowOf2 ?x)
		(BelowOf3 ?x)
	)
	(:action moveRight
		:parameters (?x)
		:precondition (and (mko (Columns ?x)))
		:effect (and 
			(when (mko (RightOf0 ?x))
				(and (RightOf1 ?x))
				)
			(when (mko (RightOf1 ?x))
				(and (RightOf2 ?x))
				)
			(when (mko (LeftOf1 ?x))
				(and (LeftOf2 ?x)
				(not (LeftOf1 ?x)))
				)
			(when (mko (LeftOf2 ?x))
				(and (LeftOf3 ?x)
				(not (LeftOf2 ?x)))
				)
			(when (mko (Column0 ?x))
				(and (Column1 ?x)
				(not (Column0 ?x)))
				)
			(when (mko (Column1 ?x))
				(and (Column2 ?x)
				(not (Column1 ?x)))
				)
			(when (mko (and (RightOf0 ?x) (LeftOf1 ?x)))
				(and (Column1 ?x))
				)
			(when (mko (and (RightOf1 ?x) (LeftOf2 ?x)))
				(and (Column2 ?x))
				)
		))
	(:action moveLeft
		:parameters (?x)
		:precondition (and (mko (Columns ?x)))
		:effect (and 
			(when (mko (LeftOf2 ?x))
				(and (LeftOf1 ?x))
				)
			(when (mko (LeftOf3 ?x))
				(and (LeftOf2 ?x))
				)
			(when (mko (RightOf1 ?x))
				(and (RightOf0 ?x)
				(RightOf1 ?x))
				)
			(when (mko (RightOf2 ?x))
				(and (RightOf1 ?x)
				(RightOf2 ?x))
				)
			(when (mko (Column1 ?x))
				(and (Column0 ?x)
				(not (Column1 ?x)))
				)
			(when (mko (Column2 ?x))
				(and (Column1 ?x)
				(not (Column2 ?x)))
				)
			(when (mko (and (RightOf1 ?x) (LeftOf2 ?x)))
				(and (Column0 ?x))
				)
			(when (mko (and (RightOf2 ?x) (LeftOf3 ?x)))
				(and (Column1 ?x))
				)
		))
	(:action moveUp
		:parameters (?x)
		:precondition (and (mko (Rows ?x)))
		:effect (and 
			(when (mko (AboveOf0 ?x))
				(and (AboveOf1 ?x))
				)
			(when (mko (AboveOf1 ?x))
				(and (AboveOf2 ?x))
				)
			(when (mko (BelowOf1 ?x))
				(and (BelowOf2 ?x)
				(not (BelowOf1 ?x)))
				)
			(when (mko (BelowOf2 ?x))
				(and (BelowOf3 ?x)
				(not (BelowOf2 ?x)))
				)
			(when (mko (Row0 ?x))
				(and (Row1 ?x)
				(not (Row0 ?x)))
				)
			(when (mko (Row1 ?x))
				(and (Row2 ?x)
				(not (Row1 ?x)))
				)
			(when (mko (and (AboveOf0 ?x) (BelowOf1 ?x)))
				(and (Row1 ?x))
				)
			(when (mko (and (AboveOf1 ?x) (BelowOf2 ?x)))
				(and (Row2 ?x))
				)
		))
	(:action moveDown
		:parameters (?x)
		:precondition (and (mko (Rows ?x)))
		:effect (and 
			(when (mko (BelowOf2 ?x))
				(and (BelowOf1 ?x))
				)
			(when (mko (BelowOf3 ?x))
				(and (BelowOf2 ?x))
				)
			(when (mko (AboveOf1 ?x))
				(and (AboveOf0 ?x)
				(not (AboveOf1 ?x)))
				)
			(when (mko (AboveOf2 ?x))
				(and (AboveOf1 ?x)
				(not (AboveOf2 ?x)))
				)
			(when (mko (Row1 ?x))
				(and (Row0 ?x)
				(not (Row1 ?x)))
				)
			(when (mko (Row2 ?x))
				(and (Row1 ?x)
				(not (Row2 ?x)))
				)
			(when (mko (and (AboveOf1 ?x) (BelowOf2 ?x)))
				(and (Row0 ?x))
				)
			(when (mko (and (AboveOf2 ?x) (BelowOf3 ?x)))
				(and (Row1 ?x))
				)
		))

)