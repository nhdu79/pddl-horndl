(define (domain robot)
(:constants
  robot - object)
(:predicates
  (columns ?x - object)
  (rows ?x - object)
  (column0 ?x - object)
  (column1 ?x - object)
  (rightof0 ?x - object)
  (rightof1 ?x - object)
  (leftof1 ?x - object)
  (leftof2 ?x - object)
  (row0 ?x - object)
  (aboveof0 ?x - object)
  (belowof1 ?x - object)
  (clear ?x - object)
  (blocked ?x - object)
  (DATALOG_BLOCKED ?x0 - object)
  (DATALOG_INCONSISTENT )
  (DATALOG_COLUMNS ?x0 - object)
  (DATALOG_LEFTOF2 ?x0 - object)
  (DATALOG_RIGHTOF0 ?x0 - object)
  (DATALOG_QUERY1 ?x0 - object)
  (DATALOG_QUERY0 ?x0 - object))
(:derived (clear ?x - object)
          (not (DATALOG_BLOCKED ?x)))
(:derived (DATALOG_BLOCKED ?x0 - object)
          (blocked ?x0))
(:derived (DATALOG_BLOCKED ?x0 - object)
          (DATALOG_COLUMNS ?x0))
(:derived (DATALOG_INCONSISTENT )
          (exists (?y0 - object) (and (leftof1 ?y0) (rightof1 ?y0))))
(:derived (DATALOG_COLUMNS ?x0 - object)
          (columns ?x0))
(:derived (DATALOG_COLUMNS ?x0 - object)
          (DATALOG_RIGHTOF0 ?x0))
(:derived (DATALOG_LEFTOF2 ?x0 - object)
          (leftof2 ?x0))
(:derived (DATALOG_LEFTOF2 ?x0 - object)
          (leftof1 ?x0))
(:derived (DATALOG_RIGHTOF0 ?x0 - object)
          (rightof0 ?x0))
(:derived (DATALOG_RIGHTOF0 ?x0 - object)
          (rightof1 ?x0))
(:derived (DATALOG_QUERY1 ?x0 - object)
          (and (DATALOG_LEFTOF2 ?x0) (rightof1 ?x0)))
(:derived (DATALOG_QUERY0 ?x0 - object)
          (and (DATALOG_RIGHTOF0 ?x0) (leftof1 ?x0)))
(:action moveRight
  :parameters (?x - object)
  :precondition (and (DATALOG_COLUMNS ?x) (not (DATALOG_INCONSISTENT)))
  :effect (and (when (DATALOG_RIGHTOF0 ?x) (and (rightof1 ?x))) (when (leftof1 ?x) (and (leftof2 ?x))) (when (and (DATALOG_LEFTOF2 ?x) (not (leftof1 ?x))) (and (not (leftof2 ?x)))) (when (column0 ?x) (and (column1 ?x) (not (column0 ?x)))) (when (DATALOG_QUERY0 ?x) (and (column1 ?x)))))
(:action moveLeft
  :parameters (?x - object)
  :precondition (and (DATALOG_COLUMNS ?x) (not (DATALOG_INCONSISTENT)))
  :effect (and (when (DATALOG_LEFTOF2 ?x) (and (leftof1 ?x))) (when (rightof1 ?x) (and (rightof0 ?x) (rightof1 ?x))) (when (column1 ?x) (and (column0 ?x) (not (column1 ?x)))) (when (DATALOG_QUERY1 ?x) (and (column0 ?x)))))
)